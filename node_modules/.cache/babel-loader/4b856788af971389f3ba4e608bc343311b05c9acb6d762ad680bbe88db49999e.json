{"ast":null,"code":"var _jsxFileName = \"/Users/waqasahmad/Desktop/CSS/Fiverr/updated-code/src/components/toggleSwitch.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ReactSwitch from 'react-switch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ToggleSwitch() {\n  _s();\n  const [checked, setChecked] = useState(true);\n  const handleChange = val => {\n    setChecked(val);\n    setLightMode(true);\n  };\n  const [lightMode, setLightMode] = useState(false);\n  lightMode ? document.body.classList.add('light') : document.body.classList.remove('light');\n  const handleMode = () => {\n    if (!lightMode) {\n      setLightMode(true);\n      document.body.classList.add('light');\n    } else {\n      setLightMode(false);\n      document.body.classList.remove('light');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    children: /*#__PURE__*/_jsxDEV(ReactSwitch, {\n      checked: checked,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(ToggleSwitch, \"dOeVaaPlYkZIn+htGlPymOYaFec=\");\n_c = ToggleSwitch;\nexport default ToggleSwitch;\nvar _c;\n$RefreshReg$(_c, \"ToggleSwitch\");","map":{"version":3,"names":["React","useState","ReactSwitch","jsxDEV","_jsxDEV","ToggleSwitch","_s","checked","setChecked","handleChange","val","setLightMode","lightMode","document","body","classList","add","remove","handleMode","style","textAlign","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/waqasahmad/Desktop/CSS/Fiverr/updated-code/src/components/toggleSwitch.js"],"sourcesContent":["import React, { useState } from 'react';\nimport ReactSwitch from 'react-switch';\n\nfunction ToggleSwitch() {\n  const [checked, setChecked] = useState(true);\n\n  const handleChange = val => {\n    setChecked(val)\n    setLightMode(true)\n  }\n\n  const [lightMode, setLightMode] = useState(false)\n  lightMode ? document.body.classList.add('light') : document.body.classList.remove('light')\n  const handleMode = () => {\n    if (!lightMode) {\n      setLightMode(true)\n      document.body.classList.add('light')\n    } else {\n      setLightMode(false)\n      document.body.classList.remove('light')\n    }\n  }\n  return (\n    <div  style={{textAlign: \"center\"}}>\n      <ReactSwitch\n        checked={checked}\n        onChange={handleChange}\n      />\n    </div>\n  );\n}\n\nexport default ToggleSwitch;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMQ,YAAY,GAAGC,GAAG,IAAI;IAC1BF,UAAU,CAACE,GAAG,CAAC;IACfC,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAM,CAACC,SAAS,EAAED,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACjDW,SAAS,GAAGC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,OAAO,CAAC,GAAGH,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACE,MAAM,CAAC,OAAO,CAAC;EAC1F,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAI,CAACN,SAAS,EAAE;MACdD,YAAY,CAAC,IAAI,CAAC;MAClBE,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,OAAO,CAAC;IACtC,CAAC,MAAM;MACLL,YAAY,CAAC,KAAK,CAAC;MACnBE,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACE,MAAM,CAAC,OAAO,CAAC;IACzC;EACF,CAAC;EACD,oBACEb,OAAA;IAAMe,KAAK,EAAE;MAACC,SAAS,EAAE;IAAQ,CAAE;IAAAC,QAAA,eACjCjB,OAAA,CAACF,WAAW;MACVK,OAAO,EAAEA,OAAQ;MACjBe,QAAQ,EAAEb;IAAa;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACvB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEV;AAACpB,EAAA,CA3BQD,YAAY;AAAAsB,EAAA,GAAZtB,YAAY;AA6BrB,eAAeA,YAAY;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}