{"ast":null,"code":"var _jsxFileName = \"/Users/waqasahmad/Desktop/CSS/Fiverr/updated-code/src/components/toggleSwitch.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ReactSwitch from 'react-switch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ToggleSwitch() {\n  _s();\n  const [checked, setChecked] = useState(false);\n  const [lightMode, setLightMode] = useState(false);\n  if (localStorage.getItem(\"isDark\") === null) {\n    const darkPref = window.matchMedia(\"(prefers-color-scheme: light)\");\n    localStorage.setItem(\"lightMode\", darkPref.matches);\n  }\n  this.setState({\n    isLight: JSON.parse(localStorage.getItem(\"lightMode\"))\n  });\n  changeTheme = () => {\n    this.setState({\n      isLight: !this.state.isDark\n    }, () => {\n      localStorage.setItem(\"isDark\", this.state.isDark);\n    });\n  };\n  lightMode ? document.body.classList.add('light') : document.body.classList.remove('light');\n  const handleChange = val => {\n    setChecked(val);\n    setLightMode(true);\n  };\n  const handleMode = () => {\n    if (!lightMode) {\n      setLightMode(true);\n      document.body.classList.add('light');\n    } else {\n      setLightMode(false);\n      document.body.classList.remove('light');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    children: /*#__PURE__*/_jsxDEV(ReactSwitch, {\n      checked: checked,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(ToggleSwitch, \"kjYVJo0howyVst4Kh3UzqTsPdiI=\");\n_c = ToggleSwitch;\nexport default ToggleSwitch;\nvar _c;\n$RefreshReg$(_c, \"ToggleSwitch\");","map":{"version":3,"names":["React","useState","ReactSwitch","jsxDEV","_jsxDEV","ToggleSwitch","_s","checked","setChecked","lightMode","setLightMode","localStorage","getItem","darkPref","window","matchMedia","setItem","matches","setState","isLight","JSON","parse","changeTheme","state","isDark","document","body","classList","add","remove","handleChange","val","handleMode","style","textAlign","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/waqasahmad/Desktop/CSS/Fiverr/updated-code/src/components/toggleSwitch.js"],"sourcesContent":["import React, { useState } from 'react';\nimport ReactSwitch from 'react-switch';\n\nfunction ToggleSwitch() {\n  const [checked, setChecked] = useState(false);\n  const [lightMode, setLightMode] = useState(false)\n\n  \n    if (localStorage.getItem(\"isDark\") === null) {\n      const darkPref = window.matchMedia(\"(prefers-color-scheme: light)\");\n      localStorage.setItem(\"lightMode\", darkPref.matches);\n    }\n    this.setState({isLight: JSON.parse(localStorage.getItem(\"lightMode\"))});\n  \n  changeTheme = () => {\n    this.setState({isLight: !this.state.isDark}, () => {\n      localStorage.setItem(\"isDark\", this.state.isDark);\n    });\n  };\n  lightMode ? document.body.classList.add('light') : document.body.classList.remove('light')\n\n  const handleChange = val => {\n    setChecked(val)\n    setLightMode(true)\n  }\n\n \n  const handleMode = () => {\n    if (!lightMode) {\n      setLightMode(true)\n      document.body.classList.add('light')\n    } else {\n      setLightMode(false)\n      document.body.classList.remove('light')\n    }\n  }\n  return (\n    <div  style={{textAlign: \"center\"}}>\n      <ReactSwitch\n        checked={checked}\n        onChange={handleChange}\n      />\n    </div>\n  );\n}\n\nexport default ToggleSwitch;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAG/C,IAAIU,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,KAAK,IAAI,EAAE;IAC3C,MAAMC,QAAQ,GAAGC,MAAM,CAACC,UAAU,CAAC,+BAA+B,CAAC;IACnEJ,YAAY,CAACK,OAAO,CAAC,WAAW,EAAEH,QAAQ,CAACI,OAAO,CAAC;EACrD;EACA,IAAI,CAACC,QAAQ,CAAC;IAACC,OAAO,EAAEC,IAAI,CAACC,KAAK,CAACV,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EAAC,CAAC,CAAC;EAEzEU,WAAW,GAAGA,CAAA,KAAM;IAClB,IAAI,CAACJ,QAAQ,CAAC;MAACC,OAAO,EAAE,CAAC,IAAI,CAACI,KAAK,CAACC;IAAM,CAAC,EAAE,MAAM;MACjDb,YAAY,CAACK,OAAO,CAAC,QAAQ,EAAE,IAAI,CAACO,KAAK,CAACC,MAAM,CAAC;IACnD,CAAC,CAAC;EACJ,CAAC;EACDf,SAAS,GAAGgB,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,OAAO,CAAC,GAAGH,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACE,MAAM,CAAC,OAAO,CAAC;EAE1F,MAAMC,YAAY,GAAGC,GAAG,IAAI;IAC1BvB,UAAU,CAACuB,GAAG,CAAC;IACfrB,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAGD,MAAMsB,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAI,CAACvB,SAAS,EAAE;MACdC,YAAY,CAAC,IAAI,CAAC;MAClBe,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,OAAO,CAAC;IACtC,CAAC,MAAM;MACLlB,YAAY,CAAC,KAAK,CAAC;MACnBe,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACE,MAAM,CAAC,OAAO,CAAC;IACzC;EACF,CAAC;EACD,oBACEzB,OAAA;IAAM6B,KAAK,EAAE;MAACC,SAAS,EAAE;IAAQ,CAAE;IAAAC,QAAA,eACjC/B,OAAA,CAACF,WAAW;MACVK,OAAO,EAAEA,OAAQ;MACjB6B,QAAQ,EAAEN;IAAa;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACvB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEV;AAAClC,EAAA,CAzCQD,YAAY;AAAAoC,EAAA,GAAZpC,YAAY;AA2CrB,eAAeA,YAAY;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}